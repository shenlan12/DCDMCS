/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class umontreal_iro_lecuyer_randvar_RandUnuran */

#ifndef _Included_umontreal_iro_lecuyer_randvar_RandUnuran
#define _Included_umontreal_iro_lecuyer_randvar_RandUnuran
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    init
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_init
  (JNIEnv *, jobject, jstring);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    close
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_close
  (JNIEnv *, jobject);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    getRandDisc
 * Signature: (DI)I
 */
JNIEXPORT jint JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_getRandDisc
  (JNIEnv *, jobject, jdouble, jint);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    getRandCont
 * Signature: (DI)D
 */
JNIEXPORT jdouble JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_getRandCont
  (JNIEnv *, jobject, jdouble, jint);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    getRandVec
 * Signature: (DI[D)V
 */
JNIEXPORT void JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_getRandVec
  (JNIEnv *, jobject, jdouble, jint, jdoubleArray);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    getRandDiscArray
 * Signature: (I[D[D[III)V
 */
JNIEXPORT void JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_getRandDiscArray
  (JNIEnv *, jobject, jint, jdoubleArray, jdoubleArray, jintArray, jint, jint);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    getRandContArray
 * Signature: (I[D[D[DII)V
 */
JNIEXPORT void JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_getRandContArray
  (JNIEnv *, jobject, jint, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    isDiscrete
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_isDiscrete
  (JNIEnv *, jobject);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    isContinuous
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_isContinuous
  (JNIEnv *, jobject);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    isContinuousMultivariate
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_isContinuousMultivariate
  (JNIEnv *, jobject);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    isEmpirical
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_isEmpirical
  (JNIEnv *, jobject);

/*
 * Class:     umontreal_iro_lecuyer_randvar_RandUnuran
 * Method:    isEmpiricalMultivariate
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_umontreal_iro_lecuyer_randvar_RandUnuran_isEmpiricalMultivariate
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
